// ******* AUTOMATICALLY GENERATED BY PyKokkos *******
#ifndef PK_FUNCTOR_INIT_VIEW_HPP
#define PK_FUNCTOR_INIT_VIEW_HPP

template <class ExecSpace>struct pk_functor_init_view{struct init_view_tag{};int32_t init_val;Kokkos::View<int32_t*,Kokkos::LayoutRight,typename ExecSpace::memory_space,Kokkos::Experimental::DefaultViewHooks> view; pk_functor_init_view(int32_t init_val, Kokkos::View<int32_t*,Kokkos::LayoutRight,typename ExecSpace::memory_space,Kokkos::Experimental::DefaultViewHooks> view, int32_t pk_randpool_num_states, int32_t pk_randpool_seed){ this->init_val= init_val;this->view= view; }; pk_functor_init_view(int32_t init_val, Kokkos::View<int32_t*,Kokkos::LayoutRight,typename ExecSpace::memory_space,Kokkos::Experimental::DefaultViewHooks> view){ this->init_val= init_val;this->view= view; };KOKKOS_FUNCTION void operator()(const init_view_tag& , int32_t tid)const{ view(tid)= init_val; };};

#endif