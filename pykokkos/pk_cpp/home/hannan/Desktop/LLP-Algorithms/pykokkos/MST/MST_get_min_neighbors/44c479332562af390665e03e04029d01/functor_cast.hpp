// ******* AUTOMATICALLY GENERATED BY PyKokkos *******
#ifndef PK_FUNCTOR_GET_MIN_NEIGHBORS_CAST__HPP
#define PK_FUNCTOR_GET_MIN_NEIGHBORS_CAST__HPP

#include <pybind11/pybind11.h>
#include <Kokkos_Core.hpp>
#include <Kokkos_Random.hpp>
#include <Kokkos_Sort.hpp>
#include <fstream>
#include <iostream>
#include <cmath>
#include <functor.hpp>

template <class ExecSpace,class ArgumentMemorySpace> pk_functor_get_min_neighbors<ExecSpace> pk_functor_get_min_neighbors_from_pyObject(pybind11::object obj) {int32_t dim = getattr(obj,"dim").cast<int32_t>();Kokkos::View<int64_t**,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks> graph = getattr(obj,"graph").cast<Kokkos::View<int64_t**,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks>>();Kokkos::View<int32_t*,Kokkos::LayoutLeft,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks> min_neighbors = getattr(obj,"min_neighbors").cast<Kokkos::View<int32_t*,Kokkos::LayoutLeft,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks>>();ExecSpace pk_exec_space_instance;auto pk_d_graph = Kokkos::create_mirror_view_and_copy(pk_exec_space_instance, graph);auto pk_d_min_neighbors = Kokkos::create_mirror_view_and_copy(pk_exec_space_instance, min_neighbors);pk_functor_get_min_neighbors<ExecSpace> pk_f(dim,pk_d_graph,pk_d_min_neighbors);return pk_f;}
template <class ExecSpace,class ArgumentMemorySpace> void pk_functor_get_min_neighbors_to_pyObject(pk_functor_get_min_neighbors<ExecSpace>& functor, pybind11::object obj) {int32_t dim = pybind11::getattr(obj,"dim").cast<int32_t>();Kokkos::View<int64_t**,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks> graph = pybind11::getattr(obj,"graph").cast<Kokkos::View<int64_t**,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks>>();Kokkos::View<int32_t*,Kokkos::LayoutLeft,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks> min_neighbors = pybind11::getattr(obj,"min_neighbors").cast<Kokkos::View<int32_t*,Kokkos::LayoutLeft,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks>>();Kokkos::resize(min_neighbors,functor.min_neighbors.extent(0));Kokkos::deep_copy(min_neighbors, functor.min_neighbors);pybind11::setattr(obj,"dim",pybind11::cast(dim));pybind11::setattr(obj,"graph",pybind11::cast(graph));pybind11::setattr(obj,"min_neighbors",pybind11::cast(min_neighbors));}

#endif