// ******* AUTOMATICALLY GENERATED BY PyKokkos *******
#ifndef PK_FUNCTOR_LLP_BORUVKA_CAST__HPP
#define PK_FUNCTOR_LLP_BORUVKA_CAST__HPP

#include <pybind11/pybind11.h>
#include <Kokkos_Core.hpp>
#include <Kokkos_Random.hpp>
#include <Kokkos_Sort.hpp>
#include <fstream>
#include <iostream>
#include <cmath>
#include <functor.hpp>

template <class ExecSpace,class ArgumentMemorySpace> pk_functor_llp_boruvka<ExecSpace> pk_functor_llp_boruvka_from_pyObject(pybind11::object obj) {int32_t dim = getattr(obj,"dim").cast<int32_t>();Kokkos::View<int32_t*,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks> sol_view = getattr(obj,"sol_view").cast<Kokkos::View<int32_t*,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks>>();Kokkos::View<int32_t*,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks> forbidden_view = getattr(obj,"forbidden_view").cast<Kokkos::View<int32_t*,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks>>();ExecSpace pk_exec_space_instance;auto pk_d_sol_view = Kokkos::create_mirror_view_and_copy(pk_exec_space_instance, sol_view);auto pk_d_forbidden_view = Kokkos::create_mirror_view_and_copy(pk_exec_space_instance, forbidden_view);pk_functor_llp_boruvka<ExecSpace> pk_f(dim,pk_d_sol_view,pk_d_forbidden_view);return pk_f;}
template <class ExecSpace,class ArgumentMemorySpace> void pk_functor_llp_boruvka_to_pyObject(pk_functor_llp_boruvka<ExecSpace>& functor, pybind11::object obj) {int32_t dim = pybind11::getattr(obj,"dim").cast<int32_t>();Kokkos::View<int32_t*,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks> sol_view = pybind11::getattr(obj,"sol_view").cast<Kokkos::View<int32_t*,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks>>();Kokkos::View<int32_t*,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks> forbidden_view = pybind11::getattr(obj,"forbidden_view").cast<Kokkos::View<int32_t*,Kokkos::LayoutRight,ArgumentMemorySpace,Kokkos::Experimental::DefaultViewHooks>>();Kokkos::resize(sol_view,functor.sol_view.extent(0));Kokkos::deep_copy(sol_view, functor.sol_view);Kokkos::resize(forbidden_view,functor.forbidden_view.extent(0));Kokkos::deep_copy(forbidden_view, functor.forbidden_view);pybind11::setattr(obj,"dim",pybind11::cast(dim));pybind11::setattr(obj,"sol_view",pybind11::cast(sol_view));pybind11::setattr(obj,"forbidden_view",pybind11::cast(forbidden_view));}

#endif